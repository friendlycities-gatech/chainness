ua = urban_areas(cb=TRUE) %>% st_transform(crs=st_crs(data4))
cbsa=core_based_statistical_areas(cb=FALSE) %>% filter(LSAD == 'M1') %>% st_transform(crs=st_crs(data4))
test=ua %>% st_drop_geometry()
data5 = data4 %>%
st_join(county %>% select(c(GEOID, NAME)) %>% rename(CNTY_GEOID = GEOID, CNTY_NAME = NAME), join = st_intersects, left = TRUE) %>%
st_join(ua %>% select(c(GEOID10, NAME10)) %>% rename(UA_GEOID = GEOID10, UA_NAME = NAME10), join = st_intersects, left = TRUE) %>%
st_join(cbsa %>% select(c(GEOID, NAME)) %>% rename(MSA_GEOID = GEOID, MSA_NAME = NAME), join = st_intersects, left = TRUE)
data5 = data5 %>% dplyr::mutate(lon = sf::st_coordinates(.)[,1],
lat = sf::st_coordinates(.)[,2]) %>%
st_drop_geometry() %>% drop_na(CNTY_GEOID)
data5 = data5 %>%
#no idea why this str_detect line did not capture some patterns with 'one', so I moved it here.
arrange(RestaurantName) %>% slice(7:nrow(data5)) %>%
#adjust based on user feedback
mutate(RestaurantName = ifelse(lon == -77.46216 & lat == 38.29814, "Casey's Fredericksburg", RestaurantName)) %>%
filter(RestaurantName != 'Dragon Dor') %>%
group_by(RestaurantName) %>% mutate(frequency=n()) %>%
mutate(isChain = ifelse(frequency>5, 1, 0))
#---09-28-2022 export for GitHub---#
write.csv(data5 %>% arrange(desc(frequency)) %>% select(-c(Address, City, PostalCode, Phone, Website)) %>%
rename(Lon = lon, Lat = lat, Frequency=frequency) %>% ungroup() %>% slice(1:240000) %>%
select(c(RestaurantName, Cuisine, OpenHours, State, CNTY_GEOID, CNTY_NAME, UA_GEOID, UA_NAME, MSA_GEOID, MSA_NAME,
Lon, Lat, Frequency, isChain)),
'chainness_point_2021_part1.csv', row.names = FALSE)
write.csv(data5 %>% arrange(desc(frequency)) %>% select(-c(Address, City, PostalCode, Phone, Website)) %>%
rename(Lon = lon, Lat = lat, Frequency=frequency) %>% ungroup() %>% slice(240001:480000) %>%
select(c(RestaurantName, Cuisine, OpenHours, State, CNTY_GEOID, CNTY_NAME, UA_GEOID, UA_NAME, MSA_GEOID, MSA_NAME,
Lon, Lat, Frequency, isChain)),
'chainness_point_2021_part2.csv', row.names = FALSE)
write.csv(data5 %>% arrange(desc(frequency)) %>% select(-c(Address, City, PostalCode, Phone, Website)) %>%
rename(Lon = lon, Lat = lat, Frequency=frequency) %>% ungroup() %>% slice(480001:705622) %>%
select(c(RestaurantName, Cuisine, OpenHours, State, CNTY_GEOID, CNTY_NAME, UA_GEOID, UA_NAME, MSA_GEOID, MSA_NAME,
Lon, Lat, Frequency, isChain)),
'chainness_point_2021_part3.csv', row.names = FALSE)
write.csv(data5 %>% arrange(desc(frequency)) %>% select(-c(Address, City, PostalCode, Phone, Website)) %>%
rename(Lon = lon, Lat = lat, Frequency=frequency) %>% ungroup() %>% slice(480001:705621) %>%
select(c(RestaurantName, Cuisine, OpenHours, State, CNTY_GEOID, CNTY_NAME, UA_GEOID, UA_NAME, MSA_GEOID, MSA_NAME,
Lon, Lat, Frequency, isChain)),
'chainness_point_2021_part3.csv', row.names = FALSE)
setwd("/Users/xiaofanliang/Dropbox (GaTech)/GT_Research/Replicable_FoodScape/8_Webtool/chainness/")
data = read.csv('data/chainness_point_2021_part1.csv')
data2 = read.csv('data/chainness_point_2021_part2.csv')
data3 = read.csv('data/chainness_point_2021_part3.csv')
data = data %>% bind_rows(data2) %>% bind_rows(data3)
data4 = data %>%
select(c(RestaurantName, Lon, Lat, Frequency)) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "^[:digit:]+$")) %>%
mutate(lon=round(Lon, 4), lat=round(Lat, 4)) %>%
filter(str_count(str_replace_all(RestaurantName, " ", ""), "[0-9]") <= 2) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "(?<=[0-9])Cafe|Cafe(?=[0-9])")) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "(?<=[0-9])China|China(?=[0-9])")) %>%
filter(!RestaurantName %in% c('andpizza', 'China Dragon','Panda Garden', 'Pad Thai', 'Thai Cuisine', 'Kroger', 'Costco',
'Target', 'Walmart McDonalds', 'Albertsons', 'Publix', 'Safeway', 'Vons', 'Shaws', 'QFC',
'Food Lion', 'Harris Teeter', 'King Soopers', 'Marianos', 'Metro Market', 'Food 4 Less',
'Peking Chinese Restaurant', 'No one Chinese Restaurant', 'Chinese Kitchen', 'Chinese Gourmet Express',
'Beijing Chinese Restaurant', 'Chinese Express', 'Number one Chinese Kitchen', 'No one Chinese', 'Chinese Buffet',
'Noone Chinese Restaurant',
'China Wok','China Garden','China King','China House','China one','China Buffet','Tauqueria','China Star','New China','Great Wall','Great Wall Chinese Restaurant','China Express','China Kitchen','Hong Kong Restaurant','New China Restaurant','Taste of China','China Cafe','Hong Kong Chinese Restaurant','El Tapatio','La Hacienda','China Taste','China Chef','Golden China','Golden Dragon','Village Pizza','China Gourmet','Jade Garden','China City','New China Buffet','Joes Pizza','China Moon','China Palace','King Buffet','Panda House','Panda Chinese Restarant','Taste of India','Asian Garden','Albertos Mexican Food','El Rodeo','China Inn','Happy Wok','Bamboo Garden','Number one Chinese Restaurant','Great Wall Restaurant','Thai Kitchen','La Michoacana','The Local','First Wok','Hong Kong Express',"Hunan Chinese Restaurant",'Sharks Fish and Chicken','Panda Chinese Restaurant','Kennedy Fried Chicken','Taqueria','Sakura Japanese Restaurant'
)) %>%
filter(!str_detect(RestaurantName, regex('china', ignore_case=T))) %>%
filter(!str_detect(RestaurantName, regex('4ty|6ty|7ty|8ty|9ty', ignore_case=T))) %>%
#----adjusted based on user feedback -----#
arrange(RestaurantName) %>%
arrange(Frequency) %>%
dplyr::sample_n(size=691891) %>%
slice(1000:691891) %>%
#mutate(colorLog = log10(frequency)) %>%
dplyr::sample_n(size=691891-1000-40500) %>% #
#mutate(colorBrks = ifelse(colorBrks == '1001-5000', '5001-24333', colorBrks)) %>%
#mutate(colorBrks = factor(colorBrks, levels=c('1', '2-5', '6-100', '101-1000', '1001-5000', '5001-24333'))) %>%
sf::st_as_sf(coords=c('Lon', 'Lat'), crs=4236) %>%
rename(n = RestaurantName, f=Frequency, g=geometry)
#data = data %>% mutate(colorLog = log10(frequency))
st_write(data4, '/Users/xiaofanliang/Dropbox (GaTech)/GT_Research/Replicable_FoodScape/8_Webtool/XF_cleaning/Mapbox Tiltset/chainness_point.geojson', delete_dsn = TRUE)
colnames(data4)
data4 = data %>%
select(c(RestaurantName, Lon, Lat, Frequency)) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "^[:digit:]+$")) %>%
mutate(lon=round(Lon, 4), lat=round(Lat, 4)) %>%
filter(str_count(str_replace_all(RestaurantName, " ", ""), "[0-9]") <= 2) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "(?<=[0-9])Cafe|Cafe(?=[0-9])")) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "(?<=[0-9])China|China(?=[0-9])")) %>%
filter(!RestaurantName %in% c('andpizza', 'China Dragon','Panda Garden', 'Pad Thai', 'Thai Cuisine', 'Kroger', 'Costco',
'Target', 'Walmart McDonalds', 'Albertsons', 'Publix', 'Safeway', 'Vons', 'Shaws', 'QFC',
'Food Lion', 'Harris Teeter', 'King Soopers', 'Marianos', 'Metro Market', 'Food 4 Less',
'Peking Chinese Restaurant', 'No one Chinese Restaurant', 'Chinese Kitchen', 'Chinese Gourmet Express',
'Beijing Chinese Restaurant', 'Chinese Express', 'Number one Chinese Kitchen', 'No one Chinese', 'Chinese Buffet',
'Noone Chinese Restaurant',
'China Wok','China Garden','China King','China House','China one','China Buffet','Tauqueria','China Star','New China','Great Wall','Great Wall Chinese Restaurant','China Express','China Kitchen','Hong Kong Restaurant','New China Restaurant','Taste of China','China Cafe','Hong Kong Chinese Restaurant','El Tapatio','La Hacienda','China Taste','China Chef','Golden China','Golden Dragon','Village Pizza','China Gourmet','Jade Garden','China City','New China Buffet','Joes Pizza','China Moon','China Palace','King Buffet','Panda House','Panda Chinese Restarant','Taste of India','Asian Garden','Albertos Mexican Food','El Rodeo','China Inn','Happy Wok','Bamboo Garden','Number one Chinese Restaurant','Great Wall Restaurant','Thai Kitchen','La Michoacana','The Local','First Wok','Hong Kong Express',"Hunan Chinese Restaurant",'Sharks Fish and Chicken','Panda Chinese Restaurant','Kennedy Fried Chicken','Taqueria','Sakura Japanese Restaurant'
)) %>%
filter(!str_detect(RestaurantName, regex('china', ignore_case=T))) %>%
filter(!str_detect(RestaurantName, regex('4ty|6ty|7ty|8ty|9ty', ignore_case=T))) %>%
#----adjusted based on user feedback -----#
arrange(RestaurantName) %>%
arrange(Frequency) %>%
dplyr::sample_n(size=691891) %>%
slice(1000:691891) %>%
#mutate(colorLog = log10(frequency)) %>%
dplyr::sample_n(size=691891-1000-40500) %>%
filter(!str_detect(RestaurantName, regex("^[:digit:]+$"))) %>%
#mutate(colorBrks = ifelse(colorBrks == '1001-5000', '5001-24333', colorBrks)) %>%
#mutate(colorBrks = factor(colorBrks, levels=c('1', '2-5', '6-100', '101-1000', '1001-5000', '5001-24333'))) %>%
sf::st_as_sf(coords=c('Lon', 'Lat'), crs=4236) %>%
rename(n = RestaurantName, f=Frequency, g=geometry)
#data = data %>% mutate(colorLog = log10(frequency))
st_write(data4, '/Users/xiaofanliang/Dropbox (GaTech)/GT_Research/Replicable_FoodScape/8_Webtool/XF_cleaning/Mapbox Tiltset/chainness_point.geojson', delete_dsn = TRUE)
data4 = data %>%
select(c(RestaurantName, Lon, Lat, Frequency)) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "^[:digit:]+$")) %>%
mutate(lon=round(Lon, 4), lat=round(Lat, 4)) %>%
filter(str_count(str_replace_all(RestaurantName, " ", ""), "[0-9]") <= 2) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "(?<=[0-9])Cafe|Cafe(?=[0-9])")) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "(?<=[0-9])China|China(?=[0-9])")) %>%
filter(!RestaurantName %in% c('andpizza', 'China Dragon','Panda Garden', 'Pad Thai', 'Thai Cuisine', 'Kroger', 'Costco',
'Target', 'Walmart McDonalds', 'Albertsons', 'Publix', 'Safeway', 'Vons', 'Shaws', 'QFC',
'Food Lion', 'Harris Teeter', 'King Soopers', 'Marianos', 'Metro Market', 'Food 4 Less',
'Peking Chinese Restaurant', 'No one Chinese Restaurant', 'Chinese Kitchen', 'Chinese Gourmet Express',
'Beijing Chinese Restaurant', 'Chinese Express', 'Number one Chinese Kitchen', 'No one Chinese', 'Chinese Buffet',
'Noone Chinese Restaurant',
'China Wok','China Garden','China King','China House','China one','China Buffet','Tauqueria','China Star','New China','Great Wall','Great Wall Chinese Restaurant','China Express','China Kitchen','Hong Kong Restaurant','New China Restaurant','Taste of China','China Cafe','Hong Kong Chinese Restaurant','El Tapatio','La Hacienda','China Taste','China Chef','Golden China','Golden Dragon','Village Pizza','China Gourmet','Jade Garden','China City','New China Buffet','Joes Pizza','China Moon','China Palace','King Buffet','Panda House','Panda Chinese Restarant','Taste of India','Asian Garden','Albertos Mexican Food','El Rodeo','China Inn','Happy Wok','Bamboo Garden','Number one Chinese Restaurant','Great Wall Restaurant','Thai Kitchen','La Michoacana','The Local','First Wok','Hong Kong Express',"Hunan Chinese Restaurant",'Sharks Fish and Chicken','Panda Chinese Restaurant','Kennedy Fried Chicken','Taqueria','Sakura Japanese Restaurant'
)) %>%
filter(!str_detect(RestaurantName, regex('china', ignore_case=T))) %>%
filter(!str_detect(RestaurantName, regex('4ty|6ty|7ty|8ty|9ty', ignore_case=T))) %>%
#----adjusted based on user feedback -----#
arrange(RestaurantName) %>%
arrange(Frequency) %>%
dplyr::sample_n(size=691891) %>%
slice(1000:691891) %>%
#mutate(colorLog = log10(frequency)) %>%
dplyr::sample_n(size=691891-1000-40500) %>%
filter(!str_detect(RestaurantName, regex("[:digit:]"))) %>%
#mutate(colorBrks = ifelse(colorBrks == '1001-5000', '5001-24333', colorBrks)) %>%
#mutate(colorBrks = factor(colorBrks, levels=c('1', '2-5', '6-100', '101-1000', '1001-5000', '5001-24333'))) %>%
sf::st_as_sf(coords=c('Lon', 'Lat'), crs=4236) %>%
rename(n = RestaurantName, f=Frequency, g=geometry)
#data = data %>% mutate(colorLog = log10(frequency))
st_write(data4, '/Users/xiaofanliang/Dropbox (GaTech)/GT_Research/Replicable_FoodScape/8_Webtool/XF_cleaning/Mapbox Tiltset/chainness_point.geojson', delete_dsn = TRUE)
data4 = data %>%
select(c(RestaurantName, Lon, Lat, Frequency)) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "^[:digit:]+$")) %>%
mutate(lon=round(Lon, 4), lat=round(Lat, 4)) %>%
filter(str_count(str_replace_all(RestaurantName, " ", ""), "[0-9]") <= 2) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "(?<=[0-9])Cafe|Cafe(?=[0-9])")) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "(?<=[0-9])China|China(?=[0-9])")) %>%
filter(!RestaurantName %in% c('andpizza', 'China Dragon','Panda Garden', 'Pad Thai', 'Thai Cuisine', 'Kroger', 'Costco',
'Target', 'Walmart McDonalds', 'Albertsons', 'Publix', 'Safeway', 'Vons', 'Shaws', 'QFC',
'Food Lion', 'Harris Teeter', 'King Soopers', 'Marianos', 'Metro Market', 'Food 4 Less',
'Peking Chinese Restaurant', 'No one Chinese Restaurant', 'Chinese Kitchen', 'Chinese Gourmet Express',
'Beijing Chinese Restaurant', 'Chinese Express', 'Number one Chinese Kitchen', 'No one Chinese', 'Chinese Buffet',
'Noone Chinese Restaurant',
'China Wok','China Garden','China King','China House','China one','China Buffet','Tauqueria','China Star','New China','Great Wall','Great Wall Chinese Restaurant','China Express','China Kitchen','Hong Kong Restaurant','New China Restaurant','Taste of China','China Cafe','Hong Kong Chinese Restaurant','El Tapatio','La Hacienda','China Taste','China Chef','Golden China','Golden Dragon','Village Pizza','China Gourmet','Jade Garden','China City','New China Buffet','Joes Pizza','China Moon','China Palace','King Buffet','Panda House','Panda Chinese Restarant','Taste of India','Asian Garden','Albertos Mexican Food','El Rodeo','China Inn','Happy Wok','Bamboo Garden','Number one Chinese Restaurant','Great Wall Restaurant','Thai Kitchen','La Michoacana','The Local','First Wok','Hong Kong Express',"Hunan Chinese Restaurant",'Sharks Fish and Chicken','Panda Chinese Restaurant','Kennedy Fried Chicken','Taqueria','Sakura Japanese Restaurant'
)) %>%
filter(!str_detect(RestaurantName, regex('china', ignore_case=T))) %>%
filter(!str_detect(RestaurantName, regex('4ty|6ty|7ty|8ty|9ty', ignore_case=T))) %>%
#----adjusted based on user feedback -----#
arrange(RestaurantName) %>%
arrange(Frequency) %>%
dplyr::sample_n(size=691891) %>%
slice(1000:691891) %>%
#mutate(colorLog = log10(frequency)) %>%
dplyr::sample_n(size=691891-1000-50500) %>%
filter(!str_detect(RestaurantName, regex("[:digit:]"))) %>%
#mutate(colorBrks = ifelse(colorBrks == '1001-5000', '5001-24333', colorBrks)) %>%
#mutate(colorBrks = factor(colorBrks, levels=c('1', '2-5', '6-100', '101-1000', '1001-5000', '5001-24333'))) %>%
sf::st_as_sf(coords=c('Lon', 'Lat'), crs=4236) %>%
rename(n = RestaurantName, f=Frequency, g=geometry)
#data = data %>% mutate(colorLog = log10(frequency))
st_write(data4, '/Users/xiaofanliang/Dropbox (GaTech)/GT_Research/Replicable_FoodScape/8_Webtool/XF_cleaning/Mapbox Tiltset/chainness_point.geojson', delete_dsn = TRUE)
#data = data %>% mutate(colorLog = log10(frequency))
st_write(data4, 'chainness_point.geojson', delete_dsn = TRUE)
data4 = data %>%
select(c(RestaurantName, Lon, Lat, Frequency)) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "^[:digit:]+$")) %>%
mutate(lon=round(Lon, 4), lat=round(Lat, 4)) %>%
filter(str_count(str_replace_all(RestaurantName, " ", ""), "[0-9]") <= 2) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "(?<=[0-9])Cafe|Cafe(?=[0-9])")) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "(?<=[0-9])China|China(?=[0-9])")) %>%
filter(!RestaurantName %in% c('andpizza', 'China Dragon','Panda Garden', 'Pad Thai', 'Thai Cuisine', 'Kroger', 'Costco',
'Target', 'Walmart McDonalds', 'Albertsons', 'Publix', 'Safeway', 'Vons', 'Shaws', 'QFC',
'Food Lion', 'Harris Teeter', 'King Soopers', 'Marianos', 'Metro Market', 'Food 4 Less',
'Peking Chinese Restaurant', 'No one Chinese Restaurant', 'Chinese Kitchen', 'Chinese Gourmet Express',
'Beijing Chinese Restaurant', 'Chinese Express', 'Number one Chinese Kitchen', 'No one Chinese', 'Chinese Buffet',
'Noone Chinese Restaurant',
'China Wok','China Garden','China King','China House','China one','China Buffet','Tauqueria','China Star','New China','Great Wall','Great Wall Chinese Restaurant','China Express','China Kitchen','Hong Kong Restaurant','New China Restaurant','Taste of China','China Cafe','Hong Kong Chinese Restaurant','El Tapatio','La Hacienda','China Taste','China Chef','Golden China','Golden Dragon','Village Pizza','China Gourmet','Jade Garden','China City','New China Buffet','Joes Pizza','China Moon','China Palace','King Buffet','Panda House','Panda Chinese Restarant','Taste of India','Asian Garden','Albertos Mexican Food','El Rodeo','China Inn','Happy Wok','Bamboo Garden','Number one Chinese Restaurant','Great Wall Restaurant','Thai Kitchen','La Michoacana','The Local','First Wok','Hong Kong Express',"Hunan Chinese Restaurant",'Sharks Fish and Chicken','Panda Chinese Restaurant','Kennedy Fried Chicken','Taqueria','Sakura Japanese Restaurant'
)) %>%
filter(!str_detect(RestaurantName, regex('china', ignore_case=T))) %>%
filter(!str_detect(RestaurantName, regex('4ty|6ty|7ty|8ty|9ty', ignore_case=T))) %>%
#----adjusted based on user feedback -----#
arrange(RestaurantName) %>%
arrange(Frequency) %>%
dplyr::sample_n(size=691891) %>%
slice(1000:691891) %>%
#mutate(colorLog = log10(frequency)) %>%
dplyr::sample_n(size=691891-1000-100500) %>%
filter(!str_detect(RestaurantName, regex("[:digit:]"))) %>%
#mutate(colorBrks = ifelse(colorBrks == '1001-5000', '5001-24333', colorBrks)) %>%
#mutate(colorBrks = factor(colorBrks, levels=c('1', '2-5', '6-100', '101-1000', '1001-5000', '5001-24333'))) %>%
sf::st_as_sf(coords=c('Lon', 'Lat'), crs=4236) %>%
rename(n = RestaurantName, f=Frequency, g=geometry)
#data = data %>% mutate(colorLog = log10(frequency))
st_write(data4, 'chainness_point_2021.geojson', delete_dsn = TRUE)
#data = data %>% mutate(colorLog = log10(frequency))
st_write(data4, 'chainness_point_2021.geojson', delete_dsn = TRUE)
#data = data %>% mutate(colorLog = log10(frequency))
st_write(data4, 'chainness_point_2021.geojson', delete_dsn = TRUE)
data4 = data %>%
select(c(RestaurantName, Lon, Lat, Frequency)) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "^[:digit:]+$")) %>%
mutate(lon=round(Lon, 4), lat=round(Lat, 4)) %>%
filter(str_count(str_replace_all(RestaurantName, " ", ""), "[0-9]") <= 2) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "(?<=[0-9])Cafe|Cafe(?=[0-9])")) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "(?<=[0-9])China|China(?=[0-9])")) %>%
filter(!RestaurantName %in% c('andpizza', 'China Dragon','Panda Garden', 'Pad Thai', 'Thai Cuisine', 'Kroger', 'Costco',
'Target', 'Walmart McDonalds', 'Albertsons', 'Publix', 'Safeway', 'Vons', 'Shaws', 'QFC',
'Food Lion', 'Harris Teeter', 'King Soopers', 'Marianos', 'Metro Market', 'Food 4 Less',
'Peking Chinese Restaurant', 'No one Chinese Restaurant', 'Chinese Kitchen', 'Chinese Gourmet Express',
'Beijing Chinese Restaurant', 'Chinese Express', 'Number one Chinese Kitchen', 'No one Chinese', 'Chinese Buffet',
'Noone Chinese Restaurant',
'China Wok','China Garden','China King','China House','China one','China Buffet','Tauqueria','China Star','New China','Great Wall','Great Wall Chinese Restaurant','China Express','China Kitchen','Hong Kong Restaurant','New China Restaurant','Taste of China','China Cafe','Hong Kong Chinese Restaurant','El Tapatio','La Hacienda','China Taste','China Chef','Golden China','Golden Dragon','Village Pizza','China Gourmet','Jade Garden','China City','New China Buffet','Joes Pizza','China Moon','China Palace','King Buffet','Panda House','Panda Chinese Restarant','Taste of India','Asian Garden','Albertos Mexican Food','El Rodeo','China Inn','Happy Wok','Bamboo Garden','Number one Chinese Restaurant','Great Wall Restaurant','Thai Kitchen','La Michoacana','The Local','First Wok','Hong Kong Express',"Hunan Chinese Restaurant",'Sharks Fish and Chicken','Panda Chinese Restaurant','Kennedy Fried Chicken','Taqueria','Sakura Japanese Restaurant'
)) %>%
filter(!str_detect(RestaurantName, regex('china', ignore_case=T))) %>%
filter(!str_detect(RestaurantName, regex('4ty|6ty|7ty|8ty|9ty', ignore_case=T))) %>%
#----adjusted based on user feedback -----#
arrange(RestaurantName) %>%
arrange(Frequency) %>%
dplyr::sample_n(size=691891) %>%
slice(1000:691891) %>%
#mutate(colorLog = log10(frequency)) %>%
dplyr::sample_n(size=691891-1000-120500) %>%
filter(!str_detect(RestaurantName, regex("[:digit:]"))) %>%
#mutate(colorBrks = ifelse(colorBrks == '1001-5000', '5001-24333', colorBrks)) %>%
#mutate(colorBrks = factor(colorBrks, levels=c('1', '2-5', '6-100', '101-1000', '1001-5000', '5001-24333'))) %>%
sf::st_as_sf(coords=c('Lon', 'Lat'), crs=4236) %>%
rename(n = RestaurantName, f=Frequency, g=geometry)
#data = data %>% mutate(colorLog = log10(frequency))
st_write(data4, 'data/chainness_point_2021.geojson', delete_dsn = TRUE)
data4 = data %>%
select(c(RestaurantName, Lon, Lat, Frequency)) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "^[:digit:]+$")) %>%
mutate(lon=round(Lon, 4), lat=round(Lat, 4)) %>%
filter(str_count(str_replace_all(RestaurantName, " ", ""), "[0-9]") <= 2) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "(?<=[0-9])Cafe|Cafe(?=[0-9])")) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "(?<=[0-9])China|China(?=[0-9])")) %>%
filter(!RestaurantName %in% c('andpizza', 'China Dragon','Panda Garden', 'Pad Thai', 'Thai Cuisine', 'Kroger', 'Costco',
'Target', 'Walmart McDonalds', 'Albertsons', 'Publix', 'Safeway', 'Vons', 'Shaws', 'QFC',
'Food Lion', 'Harris Teeter', 'King Soopers', 'Marianos', 'Metro Market', 'Food 4 Less',
'Peking Chinese Restaurant', 'No one Chinese Restaurant', 'Chinese Kitchen', 'Chinese Gourmet Express',
'Beijing Chinese Restaurant', 'Chinese Express', 'Number one Chinese Kitchen', 'No one Chinese', 'Chinese Buffet',
'Noone Chinese Restaurant',
'China Wok','China Garden','China King','China House','China one','China Buffet','Tauqueria','China Star','New China','Great Wall','Great Wall Chinese Restaurant','China Express','China Kitchen','Hong Kong Restaurant','New China Restaurant','Taste of China','China Cafe','Hong Kong Chinese Restaurant','El Tapatio','La Hacienda','China Taste','China Chef','Golden China','Golden Dragon','Village Pizza','China Gourmet','Jade Garden','China City','New China Buffet','Joes Pizza','China Moon','China Palace','King Buffet','Panda House','Panda Chinese Restarant','Taste of India','Asian Garden','Albertos Mexican Food','El Rodeo','China Inn','Happy Wok','Bamboo Garden','Number one Chinese Restaurant','Great Wall Restaurant','Thai Kitchen','La Michoacana','The Local','First Wok','Hong Kong Express',"Hunan Chinese Restaurant",'Sharks Fish and Chicken','Panda Chinese Restaurant','Kennedy Fried Chicken','Taqueria','Sakura Japanese Restaurant'
)) %>%
filter(!str_detect(RestaurantName, regex('china', ignore_case=T))) %>%
filter(!str_detect(RestaurantName, regex('4ty|6ty|7ty|8ty|9ty', ignore_case=T))) %>%
#----adjusted based on user feedback -----#
arrange(RestaurantName) %>%
arrange(Frequency) %>%
dplyr::sample_n(size=691891) %>%
slice(1000:691891) %>%
#mutate(colorLog = log10(frequency)) %>%
dplyr::sample_n(size=691891-1000-150500) %>%
filter(!str_detect(RestaurantName, regex("[:digit:]"))) %>%
#mutate(colorBrks = ifelse(colorBrks == '1001-5000', '5001-24333', colorBrks)) %>%
#mutate(colorBrks = factor(colorBrks, levels=c('1', '2-5', '6-100', '101-1000', '1001-5000', '5001-24333'))) %>%
sf::st_as_sf(coords=c('Lon', 'Lat'), crs=4236) %>%
rename(n = RestaurantName, f=Frequency, g=geometry)
data4 = data %>%
select(c(RestaurantName, Lon, Lat, Frequency)) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "^[:digit:]+$")) %>%
mutate(lon=round(Lon, 4), lat=round(Lat, 4)) %>%
filter(str_count(str_replace_all(RestaurantName, " ", ""), "[0-9]") <= 2) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "(?<=[0-9])Cafe|Cafe(?=[0-9])")) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "(?<=[0-9])China|China(?=[0-9])")) %>%
filter(!RestaurantName %in% c('andpizza', 'China Dragon','Panda Garden', 'Pad Thai', 'Thai Cuisine', 'Kroger', 'Costco',
'Target', 'Walmart McDonalds', 'Albertsons', 'Publix', 'Safeway', 'Vons', 'Shaws', 'QFC',
'Food Lion', 'Harris Teeter', 'King Soopers', 'Marianos', 'Metro Market', 'Food 4 Less',
'Peking Chinese Restaurant', 'No one Chinese Restaurant', 'Chinese Kitchen', 'Chinese Gourmet Express',
'Beijing Chinese Restaurant', 'Chinese Express', 'Number one Chinese Kitchen', 'No one Chinese', 'Chinese Buffet',
'Noone Chinese Restaurant',
'China Wok','China Garden','China King','China House','China one','China Buffet','Tauqueria','China Star','New China','Great Wall','Great Wall Chinese Restaurant','China Express','China Kitchen','Hong Kong Restaurant','New China Restaurant','Taste of China','China Cafe','Hong Kong Chinese Restaurant','El Tapatio','La Hacienda','China Taste','China Chef','Golden China','Golden Dragon','Village Pizza','China Gourmet','Jade Garden','China City','New China Buffet','Joes Pizza','China Moon','China Palace','King Buffet','Panda House','Panda Chinese Restarant','Taste of India','Asian Garden','Albertos Mexican Food','El Rodeo','China Inn','Happy Wok','Bamboo Garden','Number one Chinese Restaurant','Great Wall Restaurant','Thai Kitchen','La Michoacana','The Local','First Wok','Hong Kong Express',"Hunan Chinese Restaurant",'Sharks Fish and Chicken','Panda Chinese Restaurant','Kennedy Fried Chicken','Taqueria','Sakura Japanese Restaurant'
)) %>%
filter(!str_detect(RestaurantName, regex('china', ignore_case=T))) %>%
filter(!str_detect(RestaurantName, regex('4ty|6ty|7ty|8ty|9ty', ignore_case=T))) %>%
#----adjusted based on user feedback -----#
arrange(RestaurantName) %>%
arrange(Frequency) %>%
dplyr::sample_n(size=691891) %>%
slice(1000:691891) %>%
#mutate(colorLog = log10(frequency)) %>%
dplyr::sample_n(size=691891-1000-130500) %>%
filter(!str_detect(RestaurantName, regex("[:digit:]"))) %>%
#mutate(colorBrks = ifelse(colorBrks == '1001-5000', '5001-24333', colorBrks)) %>%
#mutate(colorBrks = factor(colorBrks, levels=c('1', '2-5', '6-100', '101-1000', '1001-5000', '5001-24333'))) %>%
sf::st_as_sf(coords=c('Lon', 'Lat'), crs=4236) %>%
rename(n = RestaurantName, f=Frequency, g=geometry)
#data = data %>% mutate(colorLog = log10(frequency))
st_write(data4, 'data/chainness_point_2021.geojson', delete_dsn = TRUE)
data4 = data %>%
select(c(RestaurantName, Lon, Lat, Frequency)) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "^[:digit:]+$")) %>%
mutate(lon=round(Lon, 4), lat=round(Lat, 4)) %>%
filter(str_count(str_replace_all(RestaurantName, " ", ""), "[0-9]") <= 2) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "(?<=[0-9])Cafe|Cafe(?=[0-9])")) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "(?<=[0-9])China|China(?=[0-9])")) %>%
filter(!RestaurantName %in% c('andpizza', 'China Dragon','Panda Garden', 'Pad Thai', 'Thai Cuisine', 'Kroger', 'Costco',
'Target', 'Walmart McDonalds', 'Albertsons', 'Publix', 'Safeway', 'Vons', 'Shaws', 'QFC',
'Food Lion', 'Harris Teeter', 'King Soopers', 'Marianos', 'Metro Market', 'Food 4 Less',
'Peking Chinese Restaurant', 'No one Chinese Restaurant', 'Chinese Kitchen', 'Chinese Gourmet Express',
'Beijing Chinese Restaurant', 'Chinese Express', 'Number one Chinese Kitchen', 'No one Chinese', 'Chinese Buffet',
'Noone Chinese Restaurant',
'China Wok','China Garden','China King','China House','China one','China Buffet','Tauqueria','China Star','New China','Great Wall','Great Wall Chinese Restaurant','China Express','China Kitchen','Hong Kong Restaurant','New China Restaurant','Taste of China','China Cafe','Hong Kong Chinese Restaurant','El Tapatio','La Hacienda','China Taste','China Chef','Golden China','Golden Dragon','Village Pizza','China Gourmet','Jade Garden','China City','New China Buffet','Joes Pizza','China Moon','China Palace','King Buffet','Panda House','Panda Chinese Restarant','Taste of India','Asian Garden','Albertos Mexican Food','El Rodeo','China Inn','Happy Wok','Bamboo Garden','Number one Chinese Restaurant','Great Wall Restaurant','Thai Kitchen','La Michoacana','The Local','First Wok','Hong Kong Express',"Hunan Chinese Restaurant",'Sharks Fish and Chicken','Panda Chinese Restaurant','Kennedy Fried Chicken','Taqueria','Sakura Japanese Restaurant'
)) %>%
filter(!str_detect(RestaurantName, regex('china', ignore_case=T))) %>%
filter(!str_detect(RestaurantName, regex('4ty|6ty|7ty|8ty|9ty', ignore_case=T))) %>%
#----adjusted based on user feedback -----#
arrange(RestaurantName) %>%
arrange(Frequency) %>%
dplyr::sample_n(size=691891) %>%
slice(1000:691891) %>%
#mutate(colorLog = log10(frequency)) %>%
dplyr::sample_n(size=691891-1000-125500) %>%
filter(!str_detect(RestaurantName, regex("[:digit:]"))) %>%
#mutate(colorBrks = ifelse(colorBrks == '1001-5000', '5001-24333', colorBrks)) %>%
#mutate(colorBrks = factor(colorBrks, levels=c('1', '2-5', '6-100', '101-1000', '1001-5000', '5001-24333'))) %>%
sf::st_as_sf(coords=c('Lon', 'Lat'), crs=4236) %>%
rename(n = RestaurantName, f=Frequency, g=geometry)
#data = data %>% mutate(colorLog = log10(frequency))
st_write(data4, 'data/chainness_point_2021.geojson', delete_dsn = TRUE)
data4 = data %>%
select(c(RestaurantName, Lon, Lat, Frequency)) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "^[:digit:]+$")) %>%
mutate(lon=round(Lon, 4), lat=round(Lat, 4)) %>%
filter(str_count(str_replace_all(RestaurantName, " ", ""), "[0-9]") <= 2) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "(?<=[0-9])Cafe|Cafe(?=[0-9])")) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "(?<=[0-9])China|China(?=[0-9])")) %>%
filter(!RestaurantName %in% c('andpizza', 'China Dragon','Panda Garden', 'Pad Thai', 'Thai Cuisine', 'Kroger', 'Costco',
'Target', 'Walmart McDonalds', 'Albertsons', 'Publix', 'Safeway', 'Vons', 'Shaws', 'QFC',
'Food Lion', 'Harris Teeter', 'King Soopers', 'Marianos', 'Metro Market', 'Food 4 Less',
'Peking Chinese Restaurant', 'No one Chinese Restaurant', 'Chinese Kitchen', 'Chinese Gourmet Express',
'Beijing Chinese Restaurant', 'Chinese Express', 'Number one Chinese Kitchen', 'No one Chinese', 'Chinese Buffet',
'Noone Chinese Restaurant',
'China Wok','China Garden','China King','China House','China one','China Buffet','Tauqueria','China Star','New China','Great Wall','Great Wall Chinese Restaurant','China Express','China Kitchen','Hong Kong Restaurant','New China Restaurant','Taste of China','China Cafe','Hong Kong Chinese Restaurant','El Tapatio','La Hacienda','China Taste','China Chef','Golden China','Golden Dragon','Village Pizza','China Gourmet','Jade Garden','China City','New China Buffet','Joes Pizza','China Moon','China Palace','King Buffet','Panda House','Panda Chinese Restarant','Taste of India','Asian Garden','Albertos Mexican Food','El Rodeo','China Inn','Happy Wok','Bamboo Garden','Number one Chinese Restaurant','Great Wall Restaurant','Thai Kitchen','La Michoacana','The Local','First Wok','Hong Kong Express',"Hunan Chinese Restaurant",'Sharks Fish and Chicken','Panda Chinese Restaurant','Kennedy Fried Chicken','Taqueria','Sakura Japanese Restaurant'
)) %>%
filter(!str_detect(RestaurantName, regex('china', ignore_case=T))) %>%
filter(!str_detect(RestaurantName, regex('4ty|6ty|7ty|8ty|9ty', ignore_case=T))) %>%
#----adjusted based on user feedback -----#
arrange(RestaurantName) %>%
arrange(Frequency) %>%
dplyr::sample_n(size=691891) %>%
slice(1000:691891) %>%
#mutate(colorLog = log10(frequency)) %>%
dplyr::sample_n(size=691891-1000-128500) %>%
filter(!str_detect(RestaurantName, regex("[:digit:]"))) %>%
#mutate(colorBrks = ifelse(colorBrks == '1001-5000', '5001-24333', colorBrks)) %>%
#mutate(colorBrks = factor(colorBrks, levels=c('1', '2-5', '6-100', '101-1000', '1001-5000', '5001-24333'))) %>%
sf::st_as_sf(coords=c('Lon', 'Lat'), crs=4236) %>%
rename(n = RestaurantName, f=Frequency, g=geometry)
#data = data %>% mutate(colorLog = log10(frequency))
st_write(data4, 'data/chainness_point_2021.geojson', delete_dsn = TRUE)
data4 = data %>%
select(c(RestaurantName, Lon, Lat, Frequency)) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "^[:digit:]+$")) %>%
mutate(lon=round(Lon, 4), lat=round(Lat, 4)) %>%
filter(str_count(str_replace_all(RestaurantName, " ", ""), "[0-9]") <= 2) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "(?<=[0-9])Cafe|Cafe(?=[0-9])")) %>%
filter(!str_detect(str_replace_all(RestaurantName, " ", ""), "(?<=[0-9])China|China(?=[0-9])")) %>%
filter(!RestaurantName %in% c('andpizza', 'China Dragon','Panda Garden', 'Pad Thai', 'Thai Cuisine', 'Kroger', 'Costco',
'Target', 'Walmart McDonalds', 'Albertsons', 'Publix', 'Safeway', 'Vons', 'Shaws', 'QFC',
'Food Lion', 'Harris Teeter', 'King Soopers', 'Marianos', 'Metro Market', 'Food 4 Less',
'Peking Chinese Restaurant', 'No one Chinese Restaurant', 'Chinese Kitchen', 'Chinese Gourmet Express',
'Beijing Chinese Restaurant', 'Chinese Express', 'Number one Chinese Kitchen', 'No one Chinese', 'Chinese Buffet',
'Noone Chinese Restaurant',
'China Wok','China Garden','China King','China House','China one','China Buffet','Tauqueria','China Star','New China','Great Wall','Great Wall Chinese Restaurant','China Express','China Kitchen','Hong Kong Restaurant','New China Restaurant','Taste of China','China Cafe','Hong Kong Chinese Restaurant','El Tapatio','La Hacienda','China Taste','China Chef','Golden China','Golden Dragon','Village Pizza','China Gourmet','Jade Garden','China City','New China Buffet','Joes Pizza','China Moon','China Palace','King Buffet','Panda House','Panda Chinese Restarant','Taste of India','Asian Garden','Albertos Mexican Food','El Rodeo','China Inn','Happy Wok','Bamboo Garden','Number one Chinese Restaurant','Great Wall Restaurant','Thai Kitchen','La Michoacana','The Local','First Wok','Hong Kong Express',"Hunan Chinese Restaurant",'Sharks Fish and Chicken','Panda Chinese Restaurant','Kennedy Fried Chicken','Taqueria','Sakura Japanese Restaurant'
)) %>%
filter(!str_detect(RestaurantName, regex('china', ignore_case=T))) %>%
filter(!str_detect(RestaurantName, regex('4ty|6ty|7ty|8ty|9ty', ignore_case=T))) %>%
#----adjusted based on user feedback -----#
arrange(RestaurantName) %>%
arrange(Frequency) %>%
dplyr::sample_n(size=691891) %>%
slice(1000:691891) %>%
#mutate(colorLog = log10(frequency)) %>%
dplyr::sample_n(size=691891-1000-129500) %>%
filter(!str_detect(RestaurantName, regex("[:digit:]"))) %>%
#mutate(colorBrks = ifelse(colorBrks == '1001-5000', '5001-24333', colorBrks)) %>%
#mutate(colorBrks = factor(colorBrks, levels=c('1', '2-5', '6-100', '101-1000', '1001-5000', '5001-24333'))) %>%
sf::st_as_sf(coords=c('Lon', 'Lat'), crs=4236) %>%
rename(n = RestaurantName, f=Frequency, g=geometry)
#data = data %>% mutate(colorLog = log10(frequency))
st_write(data4, 'data/chainness_point_2021.geojson', delete_dsn = TRUE)
#install libraries if they have not been installed
if (!require("interactions")) install.packages("interactions")
#load the library
library(interactions)
# ggpairs
ggpairs(df[ ,c("mval", "p.single", "p.multi")])
if (!require("GGally")) install.packages("GGally")
library(GGally)
# ggpairs
ggpairs(df[ ,c("mval", "p.single", "p.multi")])
df <- read.csv("Week12_multi_hetero.csv")
#read data
setwd("/Users/xiaofanliang/Dropbox (GaTech)/GT_Academics/CP6025_TA/Lab/Lab12/")
df <- read.csv("Week12_multi_hetero.csv")
# ggpairs
ggpairs(df[ ,c("mval", "p.single", "p.multi")])
# ols regression using IVs that have severe multicoliinearity problem
multicol.reg <- lm(mval ~ p.single + p.multi, data = df)
# Calculate VIF
car::vif(multicol.reg)
# Artificially creating a perfectly collinear variables
df$p.non.single <- 1 - df$p.single
ggpairs(df[,c("p.non.single", "p.single")]) # scatterplot with a perfect straight line & correlation coefficient of -1
# Let's see what happens in a regression
ols2 <- lm(mval ~ in.atl + p.single + p.non.single, data = df)
summary(ols2)
# Print the model below and compare it with ols2. They should be identical.
compare.ols <- lm(mval ~ in.atl + p.single, data = df)
compare.ols
# Let's see what happens in a regression
ols2 <- lm(mval ~ in.atl + p.single + p.non.single, data = df)
summary(ols2)
set.seed(123)
n.sample <- 200
x1 <- rbinom(n.sample, size = 1, prob =0.5)
x2 <- runif(n.sample, -5, 5)
a <- 5
b1 <- 3
b2 <- 4
b3 <- -3
e <- rnorm(n.sample, 0, 5)
y <- a + b1 * x1 + b2 * x2 + b3 * x1 * x2 + e
sim.dat <- data.frame(y,x1,x2)
par(mfrow = c(2,2)) # Create a 1 X 3 plotting matrix
#The next 3 plots created will be plotted next to each other
hist(sim.dat$x1)
hist(sim.dat$x2)
hist(sim.dat$y)
mod.sim <- lm(y ~ x1 * x2, dat = sim.dat)
summary(mod.sim)
mod.sim <- lm(y ~ x1 * x2, dat = sim.dat)
summary(mod.sim)
coef(mod.sim)
coef(mod.sim)[1]
plot(x = sim.dat[sim.dat$x1 == 0, ]$x2, y = sim.dat[sim.dat$x1 == 0, ]$y,
col = rgb(red = 0, green = 0, blue = 1, alpha = 0.25), pch = 19,
xlab = "x2", ylab = "y")
abline(a = coef(mod.sim)[1], b = coef(mod.sim)[3], col = "blue", pch = 19, lwd = 2)
1. For all cases where $x_1=0$, what is the relationship between $x_2$ and $y$?
Next, we can add the data points where $x_1=1$, and add the separate regression line for these points:
plot(x = sim.dat[sim.dat$x1 == 0, ]$x2, y = sim.dat[sim.dat$x1 == 0, ]$y,
pch = 19, xlab = "x2", ylab = "y", col = rgb(red = 0, green = 0, blue = 1, alpha = 0.25))
abline(a = coef(mod.sim)[1], b = coef(mod.sim)[3], col = "blue", lwd = 2)
points(x = sim.dat[sim.dat$x1 == 1, ]$x2, y = sim.dat[sim.dat$x1 == 1, ]$y,
col = rgb(red = 1, green = 0, blue = 0, alpha = 0.25), pch = 19)
abline(a = coef(mod.sim)[1] + coef(mod.sim)[2], b = coef(mod.sim)[3] + coef(mod.sim)[4],
col = "red", lwd = 2)
interact_plot(mod.sim, pred = x2, modx = x1)
mod.sim2 <- lm(y ~ x1:x2, data = sim.dat)
summary(mod.sim2)
interact_plot(mod.sim2, pred = x2, modx = x1)
plot(x = sim.dat[sim.dat$x1 == 0, ]$x2, y = sim.dat[sim.dat$x1 == 0, ]$y,
pch = 19, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.25),
xlab = "x2", ylab = "y")
points(x = sim.dat[sim.dat$x1 == 1, ]$x2, y = sim.dat[sim.dat$x1 == 1, ]$y,
col = rgb(red = 1, green = 0, blue = 0, alpha = 0.25), pch = 19)
abline(a = coef(mod.sim2)[1], b = coef(mod.sim2)[2], lwd = 2)
#you may want to run dev.off() to clear the plot panel for base R plots.
dev.off()
plot(x = sim.dat[sim.dat$x1 == 0, ]$x2, y = sim.dat[sim.dat$x1 == 0, ]$y,
pch = 19, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.25),
xlab = "x2", ylab = "y")
points(x = sim.dat[sim.dat$x1 == 1, ]$x2, y = sim.dat[sim.dat$x1 == 1, ]$y,
col = rgb(red = 1, green = 0, blue = 0, alpha = 0.25), pch = 19)
abline(a = coef(mod.sim2)[1], b = coef(mod.sim2)[2], lwd = 2)
test = c(63.33, 61.11, 71.11, 98.89, 73.33, 77.78, 57.22, 93.33, 66.67, 55.56, 70, 84.44, 62.22, 77.78, 85.56, 88.89, 86.67, 63.33, 88.89, 75, 93.33, 67.78, 44.44, 86.67, 78.89, 77.78, 87.78, 92.22, 90, 64.44, 100, 95.56)
summary(test)
setwd('/Users/xiaofanliang/Dropbox (GaTech)/GT_Research/Replicable_FoodScape/8_Webtool/')
setwd("/Users/xiaofanliang/Dropbox (GaTech)/GT_Research/Replicable_FoodScape/8_Webtool/chainness/")
library(dplyr)
#library(shiny)
library(leaflet)
library(sf)
library(leafgl)
library(rsconnect)
library(stringr)
data = read.csv('data/chainness_point_2021_part1.csv')
data2 = read.csv('data/chainness_point_2021_part2.csv')
data3 = read.csv('data/chainness_point_2021_part3.csv')
data = data %>% bind_rows(data2) %>% bind_rows(data3)
colnames(data)
test = data %>% filter(RestaurantName) %>% summarise(n=n())
test = data %>% group_by(RestaurantName) %>% summarise(n=n())
View(test)
data %>% filter(RestaurantName == 'Subway')
data1 = read.csv('data/chainness_point_2021_part1.csv')
data2 = read.csv('data/chainness_point_2021_part2.csv')
data3 = read.csv('data/chainness_point_2021_part3.csv')
data = data1 %>% bind_rows(data2) %>% bind_rows(data3)
data %>% filter(RestaurantName == 'Subway') %>% n()
data %>% filter(RestaurantName == 'Subway') %>% nrow()
data1 = read.csv('data/chainness_point_2021_part1.csv')
data2 = read.csv('data/chainness_point_2021_part2.csv')
data3 = read.csv('data/chainness_point_2021_part3.csv')
data = data1 %>% bind_rows(data2) %>% bind_rows(data3)
data %>% filter(RestaurantName == 'Subway') %>% nrow()
test = data %>% filter(RestaurantName == 'Subway')
View(test)
View(test)
test %>% group_by(Cusisine) %>% summarise(n=n())
test %>% group_by(Cuisine) %>% summarise(n=n())
View(data)
test = data %>% filter(RestaurantName == 'Panda Express')
